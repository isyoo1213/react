{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INSUNG\\\\Documents\\\\dev\\\\react\\\\01-starting-setup\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState(''); // const [userInput, setUserInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount: '',\n  //     enteredDate: ''\n  // });\n  //바닐라 JS처럼 event 발생 시 자동적으로 event 객체 획득\n  //컴포넌트가 재평가될 때에도 특정 값을 저장하고 가져오기 위해서 state사용 가능\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n    /*\r\n    setUserInput({\r\n            ...userInput,\r\n            // state들을 객체로 묶었을 때, 한 속성만 변경한다면 기존 state객체에 덮어쓰기가 아닌 현재 해당 state속성만 새로 생성 >> 이전의 amount와 date를 위한 key, value 값을 잃어버림 >> 모든 객체 속성들이 사라지지 않도록 해야함 >> spread 연산자로 가져온 후 변한 state속성만 override\r\n            enteredTitle: event.target.value,\r\n        })\r\n    */\n\n    console.log(event.target.value);\n    /*\r\n    setUserInput((prevState) => {\r\n        return {...prevState, enteredTitle: event.target.value};\r\n    });\r\n    // 이전 state에 의존하는 다수의 state 속성을 가진 state 객체를 관리할 때는 업데이트 함수에 '함수'를 통해 넘겨주는 것이 업데이트된 최신의 state 스냅샷을 안전하게 가져올 수 있다.\r\n    */\n  }; //이 작업은 컴포넌트 자체의 업데이트지만 렌더를 업데이트하기 위한 작업이 아님. state를 활용한 저장기능.\n  //컴포넌트 함수의 생명주기와 독립적인 별개의 전수에 값을 저장하고 로드하기 위함.\n\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value); // setUserInput({\n    //     ...userInput,\n    //     enteredAmount: event.target.value,\n    // })\n\n    console.log(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value); // setUserInput({\n    //     ...userInput,\n    //     enteredDate: event.target.value,\n    // })\n\n    console.log(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    console.log(expenseData);\n    props.onSaveExpenseData(expesneData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__comtrols\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: enteredAmount,\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: enteredDate,\n          min: \"2022-07-04\",\n          max: \"2022-07-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ExpenseForm","props","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","event","target","value","console","log","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","expesneData"],"sources":["C:/Users/INSUNG/Documents/dev/react/01-starting-setup/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    // const [userInput, setUserInput] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmount: '',\r\n    //     enteredDate: ''\r\n    // });\r\n\r\n    //바닐라 JS처럼 event 발생 시 자동적으로 event 객체 획득\r\n    //컴포넌트가 재평가될 때에도 특정 값을 저장하고 가져오기 위해서 state사용 가능\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        /*\r\n        setUserInput({\r\n                ...userInput,\r\n                // state들을 객체로 묶었을 때, 한 속성만 변경한다면 기존 state객체에 덮어쓰기가 아닌 현재 해당 state속성만 새로 생성 >> 이전의 amount와 date를 위한 key, value 값을 잃어버림 >> 모든 객체 속성들이 사라지지 않도록 해야함 >> spread 연산자로 가져온 후 변한 state속성만 override\r\n                enteredTitle: event.target.value,\r\n            })\r\n        */\r\n\r\n        console.log(event.target.value);\r\n        \r\n        /*\r\n        setUserInput((prevState) => {\r\n            return {...prevState, enteredTitle: event.target.value};\r\n       });\r\n       // 이전 state에 의존하는 다수의 state 속성을 가진 state 객체를 관리할 때는 업데이트 함수에 '함수'를 통해 넘겨주는 것이 업데이트된 최신의 state 스냅샷을 안전하게 가져올 수 있다.\r\n       */\r\n    }\r\n    //이 작업은 컴포넌트 자체의 업데이트지만 렌더를 업데이트하기 위한 작업이 아님. state를 활용한 저장기능.\r\n    //컴포넌트 함수의 생명주기와 독립적인 별개의 전수에 값을 저장하고 로드하기 위함.\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredAmount: event.target.value,\r\n        // })\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredDate: event.target.value,\r\n        // })\r\n        console.log(event.target.value);\r\n    }\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n\r\n        console.log(expenseData);\r\n\r\n        props.onSaveExpenseData(expesneData);\r\n\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    }\r\n\r\n    return <form onSubmit={submitHandler}>\r\n        <div className='new-expense__comtrols'>\r\n            <div className='new-expense__control'>\r\n                <label>Title</label>\r\n                <input type='text' value={enteredTitle} onChange={titleChangeHandler}></input>\r\n            </div>\r\n            <div className='new-expense__control'>\r\n                <label>Amount</label>\r\n                <input type='number' value={enteredAmount} min='0.01' step='0.01' onChange={amountChangeHandler}></input>\r\n            </div>\r\n            <div className='new-expense__control'>\r\n                <label>Date</label>\r\n                <input type='date' value={enteredDate} min='2022-07-04' max='2022-07-31' onChange={dateChangeHandler}></input>\r\n            </div>\r\n        </div>\r\n        <div className='new-expense__actions'>\r\n            <button type='submit'>Add Expense</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nexport default ExpenseForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}