{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INSUNG\\\\Documents\\\\dev\\\\react\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseChart = props => {\n  const chartDataPoinsts = [{\n    label: \"Jan\",\n    value: 0\n  }, {\n    label: \"Feb\",\n    value: 0\n  }, {\n    label: \"Mar\",\n    value: 0\n  }, {\n    label: \"Apr\",\n    value: 0\n  }, {\n    label: \"May\",\n    value: 0\n  }, {\n    label: \"Jun\",\n    value: 0\n  }, {\n    label: \"Jul\",\n    value: 0\n  }, {\n    label: \"Aug\",\n    value: 0\n  }, {\n    label: \"Sep\",\n    value: 0\n  }, {\n    label: \"Oct\",\n    value: 0\n  }, {\n    label: \"Nov\",\n    value: 0\n  }, {\n    label: \"Dec\",\n    value: 0\n  }];\n\n  for (const expense of props.expenses) {\n    //props.expense는 배열이므로 of 사용. 객체면 in\n    const expenseMonth = expense.date.getMonth(); //월을 가르키는 index로 사용 >> starting at 0 >> Jan >> 0\n\n    chartDataPoinsts[expenseMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n\n_c = ExpenseChart;\nexport default ExpenseChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseChart\");","map":{"version":3,"names":["React","Chart","ExpenseChart","props","chartDataPoinsts","label","value","expense","expenses","expenseMonth","date","getMonth","amount","chartDataPoints"],"sources":["C:/Users/INSUNG/Documents/dev/react/01-starting-setup/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nconst ExpenseChart = (props) => {\r\n  const chartDataPoinsts = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 }\r\n  ];\r\n\r\n  for(const expense of props.expenses){\r\n    //props.expense는 배열이므로 of 사용. 객체면 in\r\n    const expenseMonth = expense.date.getMonth(); \r\n    //월을 가르키는 index로 사용 >> starting at 0 >> Jan >> 0\r\n    chartDataPoinsts[expenseMonth].value += expense.amount\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints}/>;\r\n};\r\n\r\nexport default ExpenseChart;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;EAC9B,MAAMC,gBAAgB,GAAG,CACvB;IAAEC,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CADuB,EAEvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAFuB,EAGvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAHuB,EAIvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAJuB,EAKvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CALuB,EAMvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CANuB,EAOvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAPuB,EAQvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CARuB,EASvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CATuB,EAUvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAVuB,EAWvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAXuB,EAYvB;IAAED,KAAK,EAAE,KAAT;IAAgBC,KAAK,EAAE;EAAvB,CAZuB,CAAzB;;EAeA,KAAI,MAAMC,OAAV,IAAqBJ,KAAK,CAACK,QAA3B,EAAoC;IAClC;IACA,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAArB,CAFkC,CAGlC;;IACAP,gBAAgB,CAACK,YAAD,CAAhB,CAA+BH,KAA/B,IAAwCC,OAAO,CAACK,MAAhD;EACD;;EAED,oBAAO,QAAC,KAAD;IAAO,UAAU,EAAEC;EAAnB;IAAA;IAAA;IAAA;EAAA,QAAP;AACD,CAxBD;;KAAMX,Y;AA0BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}