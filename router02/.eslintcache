[{"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\index.js":"1","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\App.js":"2","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\pages\\NewQuote.js":"3","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\pages\\AllQuotes.js":"4","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\pages\\QuoteDetail.js":"5","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\comments\\Comments.js":"6","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\comments\\NewCommentForm.js":"7","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\layout\\Layout.js":"8","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\layout\\MainNavigation.js":"9","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\quotes\\QuoteList.js":"10","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\quotes\\QuoteItem.js":"11","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\quotes\\QuoteForm.js":"12","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\UI\\Card.js":"13","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\UI\\LoadingSpinner.js":"14","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\quotes\\HighlightedQuote.js":"15","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\pages\\NotFound.js":"16","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\hooks\\use-http.js":"17","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\lib\\api.js":"18","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\quotes\\NoQuotesFound.js":"19","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\comments\\CommentsList.js":"20","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\comments\\CommentItem.js":"21"},{"size":272,"mtime":1660576780402,"results":"22","hashOfConfig":"23"},{"size":1139,"mtime":1661326593749,"results":"24","hashOfConfig":"23"},{"size":828,"mtime":1660903571657,"results":"25","hashOfConfig":"23"},{"size":972,"mtime":1660904789755,"results":"26","hashOfConfig":"23"},{"size":2292,"mtime":1660941378763,"results":"27","hashOfConfig":"23"},{"size":2653,"mtime":1661012969796,"results":"28","hashOfConfig":"23"},{"size":1835,"mtime":1661012970908,"results":"29","hashOfConfig":"23"},{"size":321,"mtime":1660658576298,"results":"30","hashOfConfig":"23"},{"size":684,"mtime":1660658500232,"results":"31","hashOfConfig":"23"},{"size":2598,"mtime":1660822299592,"results":"32","hashOfConfig":"23"},{"size":454,"mtime":1660678746016,"results":"33","hashOfConfig":"23"},{"size":2015,"mtime":1660688297571,"results":"34","hashOfConfig":"23"},{"size":154,"mtime":1660576016545,"results":"35","hashOfConfig":"23"},{"size":165,"mtime":1660576021077,"results":"36","hashOfConfig":"23"},{"size":268,"mtime":1660575987477,"results":"37","hashOfConfig":"23"},{"size":212,"mtime":1660679797486,"results":"38","hashOfConfig":"23"},{"size":1212,"mtime":1660899390726,"results":"39","hashOfConfig":"23"},{"size":2181,"mtime":1660899392944,"results":"40","hashOfConfig":"23"},{"size":330,"mtime":1660904967350,"results":"41","hashOfConfig":"23"},{"size":332,"mtime":1660575951598,"results":"42","hashOfConfig":"23"},{"size":198,"mtime":1660575936392,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1plpeak",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\index.js",[],["94","95"],"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\App.js",[],"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\pages\\NewQuote.js",["96","97"],"import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = () => {\r\n  const {sendRequest, status} = useHttp(addQuote);\r\n  {/* 실행하는 것이 아닌 hook으로 선언된 함수들을 가져오는 것 */}\r\n  const history = useHistory();\r\n\r\n  useEffect(()=>{\r\n    if(status === 'completed'){\r\n      history.push('/quotes');\r\n    }\r\n  },[status, history])\r\n  {/* history 객체는 변하지 않을 것이지만 추가해줘야함 */}\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData)\r\n  }\r\n\r\n  return (\r\n    <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler}/>\r\n  )\r\n}\r\n\r\nexport default NewQuote;","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\pages\\AllQuotes.js",["98"],"import { useEffect } from \"react\";\r\n\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(()=>{\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n  {/* sendRequest를 종속성에 추가해주는 이유는..? */}\r\n\r\n  if(status === 'pending'){\r\n    return <div className=\"centered\">\r\n      <LoadingSpinner />\r\n    </div>\r\n  }\r\n\r\n  if(error){\r\n    return <p className=\"centered focused\">{error}</p>\r\n  }\r\n\r\n  if(status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)){\r\n    return <NoQuotesFound />\r\n  }\r\n\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\pages\\QuoteDetail.js",["99","100"],"import { Fragment, useEffect } from \"react\";\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\n\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n\r\n  console.log(match);\r\n  {/* match 객체에는 params외에 path와 url을 구분한 속성이 존재\r\n      path는 Route를 활용해 정의한 경로, placeholder(:quoteId) */}\r\n\r\n  const params = useParams();\r\n\r\n  const { quoteId } = params;\r\n\r\n  const {sendRequest, status, data:loadedQuote, error } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(()=>{\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId])\r\n\r\n  if(status === 'pending'){\r\n    <div className=\"centered\">\r\n      <LoadingSpinner />\r\n    </div>\r\n  }\r\n\r\n  if(error){\r\n    return <p className=\"centered\">{error}</p>\r\n  }\r\n\r\n  if(!loadedQuote){\r\n    return <p>No Quote Found...</p>\r\n  }\r\n  {/* author와 quote의 본문 내용에 유효성 검증 필요 */}\r\n\r\n  return (\r\n    <Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={match.path} exact>\r\n        {/* Route의 경로정의 !== Link를 통한 concrete value\r\n            - placeholder가 그대로 존재하는 route 경로로 정의 가능 \r\n            >>> App.js에서 정의된 root Route의 주소가 변경되더라도, nested Route에서 문자열 주소를 변경해줄 필요 없음*/}\r\n        <div className=\"centered\">\r\n          <Link to={`${match.url}/comments`} >\r\n            {/* Link에 할당되는 concrete value는 match의 url을 통해 특정화해서 가져오기 가능 */}\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      {/* <Route path={`/quotes/${params.quoteId}/comments`} > */}\r\n      {/* App.js의 Route에 정의된 /quotes/:quoteId <<에 exact 설정 시 url이 1:1대응에서 어긋나므로 풀어주어야함 */}\r\n      <Route path={`${match.path}/comments`} >\r\n\r\n        <Comments />\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\comments\\Comments.js",["101"],"import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport styles from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../lib/api'; \nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const {sendRequest, data: loadedComments, status} = useHttp(getAllComments);\n\n  const { quoteId } = params;\n\n  useEffect(()=>{\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId)\n  }, [sendRequest, quoteId])\n  {/* 핸들러는 자식 컴포넌트 내 변수를 의존성으로 사용하기 위해 props를 통해 dril\n      >> 핸들러 외부 변수인 quoteId에 따라 sendRequest의 함수가 재생성 됨\n         + 자식 컴포넌트에서 핸들러를 통해 내부의 sendRequest를 실행하면, 그에 따른 리턴(status, data 등)의 변화로\n           Comments 컴포넌트의 재랜더링 >> props drilling으로 전해지는 핸들러 또한 재생성 >> 무한루프\n        >> useCallback을 통해 자식 컴포넌트에서 comment 추가 후 useEffect가 실행되고, 컴포넌트 재랜더링 후 status, error 의존성이 안정화가 이루어 진 후, 의존성으로 등록된 현재 핸들러 또한 같은 sendREquest, quoteId를 가진 클로저?로 넘겨지므로 무한루프 벗어날 수 있음 */}\n\n  let comments;\n\n  if(status === 'pending'){\n    comments = <div className='centered'>\n      <LoadingSpinner />\n    </div>\n  }\n\n  if(status === 'completed' && loadedComments){\n    comments = <CommentsList comments={loadedComments}/>\n  }\n\n  if(status === 'completed' && (!loadedComments || loadedComments.length === 0)){\n    comments = <p className='centered'>No Comments were Added yet!</p>\n  }\n  \n  return (\n    <section className={styles.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={addedCommentHandler}/>}\n      {/* comment 추가시 이를 렌더링하는 컴포넌트는 Comments.js의 컴포넌트이므로, 이 위치에서 함수 정의 후 props로 드릴 */}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\comments\\NewCommentForm.js",["102"],"import { useRef, useEffect } from \"react\";\n\nimport styles from \"./NewCommentForm.module.css\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(()=>{\n    if (status === 'completed'){\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n  {/* onAddedComment는 부모 컴포넌트에서 props를 통해 전달\n      - quoteId를 인자로 useHttp를 실행하는 addedCommentHandler 함수\n      - comment 추가와 관련 없이, GET 메서드로 해당 quoteId에 대한 All comments를 받아옴\n      - submit 후, sendRequest의 결과에 따른 status, error에 따라  quoteId의 모든 comments를 받아오는 함수를 재사용함\n        의존성을 현재 컴포넌트의 변수들로 사용하기 위해 props dril */}\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({commentData : { text: enteredText }, quoteId : props.quoteId});\n  };\n\n  return (\n    <form className={styles.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={styles.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={styles.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\layout\\Layout.js",[],"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\layout\\MainNavigation.js",[],"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\quotes\\QuoteList.js",["103","104","105","106","107","108"],"import { Fragment } from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport styles from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  {/* location 객체에는 최근 로드된 page와 url에 대한 정보\n      >> 객체 내 search 속성 개체내에 params에 대한 정보가 담겨있음 */}\n\n  const match = useRouteMatch();\n\n  console.log(match);\n  console.log(location);\n  {/* match와 location모두 사용 가능\n      match - path 속성 / location - pathname에 /quotes << 문자정보 확인 가능 */}\n\n  const queryParams = new URLSearchParams(location.search);\n  {/* QueryParameter와 route 매개변수, :quoteId와 같은 매개변수와의 차이점\n      1. 선택적으로 사용가능 - route매칭 자체에 영향을 미치지 않음\n      2. 매칭된 route에 추가적인 behavior - by url을 통한 정보의 저장\n    >> location 객체의 key인 search를 통해 쿼리 파라미터를 객체로 추출 */}\n\n  const isSortingAscending = queryParams.get('sort') === 'asc';\n  {/* 객체로 추출된 쿼리파라미터를 key를 통해 value를 추출한 후 비교 */}\n  console.log(isSortingAscending);\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${(isSortingAscending ? 'desc' : 'asc')}`,\n    })\n    // history.push(`${location.pathname}?sort=${(isSortingAscending ? 'desc' : 'asc')}`)\n    {/* hisory에서 push를 통해 페이지를 리렌더링 >> 같은 페이지의 모습을 다시 랜더링 하더라도 location 객체의 속성변화 */}\n    {/* location객체를 통해 최대한 하드코딩을 피해 템플릿리터럴로 표현 */}\n  }\n\n  return (\n    <Fragment>\n      <div className={styles.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={styles.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\quotes\\QuoteItem.js",[],"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\quotes\\QuoteForm.js",[],"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\UI\\Card.js",[],"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\UI\\LoadingSpinner.js",[],"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\quotes\\HighlightedQuote.js",[],"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\pages\\NotFound.js",["109"],"const NotFound = () => {\r\n  {/* centered는 css모듈이 아닌 index.css에 설정된 전역 클래스 */}\r\n  return <div className=\"centered\">\r\n    <p>Page not found</p>\r\n  </div>\r\n}\r\n\r\nexport default NotFound;","C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\hooks\\use-http.js",[],"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\lib\\api.js",[],"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\quotes\\NoQuotesFound.js",[],"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\comments\\CommentsList.js",[],"C:\\Users\\INSUNG\\Documents\\dev\\react\\router02\\src\\components\\comments\\CommentItem.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":10,"column":3,"nodeType":"116","messageId":"117","endLine":10,"endColumn":44},{"ruleId":"114","severity":1,"message":"115","line":18,"column":3,"nodeType":"116","messageId":"117","endLine":18,"endColumn":41},{"ruleId":"114","severity":1,"message":"115","line":20,"column":3,"nodeType":"116","messageId":"117","endLine":20,"endColumn":41},{"ruleId":"114","severity":1,"message":"115","line":15,"column":3,"nodeType":"116","messageId":"117","endLine":16,"endColumn":57},{"ruleId":"114","severity":1,"message":"115","line":41,"column":3,"nodeType":"116","messageId":"117","endLine":41,"endColumn":42},{"ruleId":"114","severity":1,"message":"115","line":30,"column":3,"nodeType":"116","messageId":"117","endLine":34,"endColumn":190},{"ruleId":"114","severity":1,"message":"115","line":20,"column":3,"nodeType":"116","messageId":"117","endLine":24,"endColumn":50},{"ruleId":"114","severity":1,"message":"115","line":20,"column":3,"nodeType":"116","messageId":"117","endLine":21,"endColumn":53},{"ruleId":"114","severity":1,"message":"115","line":27,"column":3,"nodeType":"116","messageId":"117","endLine":28,"endColumn":71},{"ruleId":"114","severity":1,"message":"115","line":31,"column":3,"nodeType":"116","messageId":"117","endLine":34,"endColumn":56},{"ruleId":"114","severity":1,"message":"115","line":37,"column":3,"nodeType":"116","messageId":"117","endLine":37,"endColumn":50},{"ruleId":"114","severity":1,"message":"115","line":48,"column":5,"nodeType":"116","messageId":"117","endLine":48,"endColumn":85},{"ruleId":"114","severity":1,"message":"115","line":49,"column":5,"nodeType":"116","messageId":"117","endLine":49,"endColumn":51},{"ruleId":"114","severity":1,"message":"115","line":2,"column":3,"nodeType":"116","messageId":"117","endLine":2,"endColumn":52},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]