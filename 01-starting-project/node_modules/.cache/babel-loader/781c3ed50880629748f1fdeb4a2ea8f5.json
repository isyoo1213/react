{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INSUNG\\\\Documents\\\\dev\\\\react\\\\01-starting-project\\\\src\\\\components\\\\UI\\\\Button\\\\Button.js\";\n// import './Button.css';\nimport styles from './Button.module.css'; // import styled from \"styled-components\";\n// const Button = styled.button`\n//    {\n//     width: 100%;\n//     font: inherit;\n//     padding: 0.5rem 1.5rem;\n//     border: 1px solid #8b005d;\n//     color: white;\n//     background: #8b005d;\n//     box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n//     cursor: pointer;\n//   }\n//   @media (min-width: 768px) {\n//     width: auto;\n//   }\n//   &:focus {\n//     outline: none;\n//   }\n//   &:hover,\n//   &:active {\n//     background: #ac0e77;\n//     border-color: #ac0e77;\n//     box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n//   }\n// `;\n// Taged Template Literal (by JS not other package)\n//styled 패키지는 모든 html 엘리먼트에 대한 method를 내장\n//button은 styled 객체의 method >> 괄호로 호출하는 것이 아닌 백틱으로 호출\n//백틱 내에 인자 전달 >> button method는 새로운 button Component를 반환\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return (\n    /*#__PURE__*/\n    //styles는 객체, 객체의 속성을 통해 css 클래스를 접근하고, 새로운 고유한 wrapper클래스로 생성해준다\n    _jsxDEV(\"button\", {\n      type: props.type,\n      className: styles.button,\n      onClick: props.onClick,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["styles","Button","props","type","button","onClick","children"],"sources":["C:/Users/INSUNG/Documents/dev/react/01-starting-project/src/components/UI/Button/Button.js"],"sourcesContent":["// import './Button.css';\n\nimport styles from './Button.module.css';\n\n// import styled from \"styled-components\";\n\n// const Button = styled.button`\n//    {\n//     width: 100%;\n//     font: inherit;\n//     padding: 0.5rem 1.5rem;\n//     border: 1px solid #8b005d;\n//     color: white;\n//     background: #8b005d;\n//     box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n//     cursor: pointer;\n//   }\n\n//   @media (min-width: 768px) {\n//     width: auto;\n//   }\n\n//   &:focus {\n//     outline: none;\n//   }\n\n//   &:hover,\n//   &:active {\n//     background: #ac0e77;\n//     border-color: #ac0e77;\n//     box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n//   }\n// `;\n// Taged Template Literal (by JS not other package)\n//styled 패키지는 모든 html 엘리먼트에 대한 method를 내장\n//button은 styled 객체의 method >> 괄호로 호출하는 것이 아닌 백틱으로 호출\n//백틱 내에 인자 전달 >> button method는 새로운 button Component를 반환\n\nconst Button = props => {\n  return (\n    //styles는 객체, 객체의 속성을 통해 css 클래스를 접근하고, 새로운 고유한 wrapper클래스로 생성해준다\n    <button type={props.type} className={styles.button} onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n"],"mappings":";AAAA;AAEA,OAAOA,MAAP,MAAmB,qBAAnB,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;EACtB;IAAA;IACE;IACA;MAAQ,IAAI,EAAEA,KAAK,CAACC,IAApB;MAA0B,SAAS,EAAEH,MAAM,CAACI,MAA5C;MAAoD,OAAO,EAAEF,KAAK,CAACG,OAAnE;MAAA,UACGH,KAAK,CAACI;IADT;MAAA;MAAA;MAAA;IAAA;EAFF;AAMD,CAPD;;KAAML,M;AASN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}