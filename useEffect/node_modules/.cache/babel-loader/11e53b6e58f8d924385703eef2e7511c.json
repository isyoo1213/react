{"ast":null,"code":"import React from 'react';\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false\n}); //컨텍스트 객체 생성, 자체는 컴포넌트가 아니지만, 컴포넌트를 포함한 객체. >> 이후 provider라는 속성을 통해 컴포넌트화\n//이후 해당 객체를 사용할 수 있도록 공급(컨텍스트를 사용할 수 있는 컴포넌트가 리스닝할 수 있도록 JSX코드로 감싸는 것), 소비 처리를 해주어야 함\n//원래 기본값을 설정하면 공급자는 필요없음. 그러나 변할 수 있는 값일 경우 공급자가 꼭 필요.\n\nexport default AuthContext;","map":{"version":3,"names":["React","AuthContext","createContext","isLoggedIn"],"sources":["C:/Users/INSUNG/Documents/dev/react/useEffect/src/context/auth-context.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst AuthContext = React.createContext({\r\n  isLoggedIn: false\r\n});\r\n//컨텍스트 객체 생성, 자체는 컴포넌트가 아니지만, 컴포넌트를 포함한 객체. >> 이후 provider라는 속성을 통해 컴포넌트화\r\n//이후 해당 객체를 사용할 수 있도록 공급(컨텍스트를 사용할 수 있는 컴포넌트가 리스닝할 수 있도록 JSX코드로 감싸는 것), 소비 처리를 해주어야 함\r\n//원래 기본값을 설정하면 공급자는 필요없음. 그러나 변할 수 있는 값일 경우 공급자가 꼭 필요.\r\nexport default AuthContext;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,WAAW,gBAAGD,KAAK,CAACE,aAAN,CAAoB;EACtCC,UAAU,EAAE;AAD0B,CAApB,CAApB,C,CAGA;AACA;AACA;;AACA,eAAeF,WAAf"},"metadata":{},"sourceType":"module"}