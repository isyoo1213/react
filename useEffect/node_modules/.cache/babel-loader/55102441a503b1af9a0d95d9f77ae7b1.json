{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\INSUNG\\\\Documents\\\\dev\\\\react\\\\useEffect\\\\src\\\\components\\\\Login\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_EMAIL_INPUT\") {\n    return {\n      value: action.payload,\n      isValid: action.payload.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"USER_EMAIL_INPUT_DONE\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_PW_INPUT\") {\n    return {\n      value: action.payload,\n      isValid: action.payload.trim().length > 6\n    };\n  }\n\n  if (action.type === \"USER_PW_INPUT_DONE\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState(); // 위 두 state는 Reducer를 활용해 emailState로 대체\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState(); // 위 두 state는 passwordState로 대체\n  const [formIsValid, setFormIsValid] = useState(false); // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log(\"Checking Form-Validity\");\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   {\n  //     /* useEffect()의 첫 인자는 return으로 함수(익명o 정의된 함수o) 클린업 함수를 가질 수 있음\n  //       useEffect()의 첫 인자 함수가 실행되기 전에(최초 실행은 제외) 클린업 프로세스를 실행\n  //       해당 effect를 특정한 컴포넌트가 DOM에서 언마운트될 때마다(컴포넌트가 재사용 될 때마다) 실행\n  //       첫 사이드 이펙트 함수가 실행되기 전에는(마운트 후 처음으로 effect가 실행되기 전) 실행되지 않음 */\n  //   }\n  //   return () => {\n  //     console.log(\"Clean Up\");\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false\n  });\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_EMAIL_INPUT\",\n      payload: event.target.value\n    });\n    setFormIsValid(event.target.value.includes(\"@\") && passwordState.value.trim().length > 6);\n    {\n      /* state가 이전 state의 상태에 의존하고 있으나, 동일한 state가 아닌 서로 다른 두 개의 state이므로 \n        함수형 폼을 전달하지 못함 (setFormIsValid라는 state의 변화에 enteredEmail과 enteredPassword가 영향)\n        >> useReduce를 사용하기 좋은 조건 */\n    }\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: \"USER_PW_INPUT\",\n      payload: event.target.value\n    });\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: \"USER_EMAIL_INPUT_DONE\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"USER_PW_INPUT_DONE\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"oz3wwSxrS7wBVhRqfJrsRQkoF94=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","payload","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["C:/Users/INSUNG/Documents/dev/react/useEffect/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_EMAIL_INPUT\") {\n    return { value: action.payload, isValid: action.payload.includes(\"@\") };\n  }\n  if (action.type === \"USER_EMAIL_INPUT_DONE\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_PW_INPUT\") {\n    return { value: action.payload, isValid: action.payload.trim().length > 6 };\n  }\n  if (action.type === \"USER_PW_INPUT_DONE\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState(); // 위 두 state는 Reducer를 활용해 emailState로 대체\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState(); // 위 두 state는 passwordState로 대체\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  // useEffect(() => {\n  //   const identifier = setTimeout(() => {\n  //     console.log(\"Checking Form-Validity\");\n  //     setFormIsValid(\n  //       enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n  //     );\n  //   }, 500);\n  //   {\n  //     /* useEffect()의 첫 인자는 return으로 함수(익명o 정의된 함수o) 클린업 함수를 가질 수 있음\n  //       useEffect()의 첫 인자 함수가 실행되기 전에(최초 실행은 제외) 클린업 프로세스를 실행\n  //       해당 effect를 특정한 컴포넌트가 DOM에서 언마운트될 때마다(컴포넌트가 재사용 될 때마다) 실행\n  //       첫 사이드 이펙트 함수가 실행되기 전에는(마운트 후 처음으로 effect가 실행되기 전) 실행되지 않음 */\n  //   }\n  //   return () => {\n  //     console.log(\"Clean Up\");\n  //     clearTimeout(identifier);\n  //   };\n  // }, [enteredEmail, enteredPassword]);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_EMAIL_INPUT\", payload: event.target.value });\n\n    setFormIsValid(\n      event.target.value.includes(\"@\") && passwordState.value.trim().length > 6\n    );\n    {\n      /* state가 이전 state의 상태에 의존하고 있으나, 동일한 state가 아닌 서로 다른 두 개의 state이므로 \n        함수형 폼을 전달하지 못함 (setFormIsValid라는 state의 변화에 enteredEmail과 enteredPassword가 영향)\n        >> useReduce를 사용하기 좋은 조건 */\n    }\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: \"USER_PW_INPUT\", payload: event.target.value });\n\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({ type: \"USER_EMAIL_INPUT_DONE\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type: \"USER_PW_INPUT_DONE\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}